services:
  backend:
    image: ghcr.io/verdiary/backend:latest
    environment:
      - ALLOWED_HOSTS=admin.${ROOT_DOMAIN},${ROOT_DOMAIN}
      - SECRET_KEY_FILE=/run/secrets/verdiary_secret
      - BOT_TOKEN_FILE=/run/secrets/bot_token
      - DATABASE_URL_FILE=/run/secrets/database_url
    networks:
      - internal
      - public
    secrets:
      - verdiary_secret
      - bot_token
      - database_url
    deploy:
      labels:
        - "traefik.enable=true"

        - "traefik.http.routers.backend-admin.rule=Host(`admin.${ROOT_DOMAIN}`)"
        - "traefik.http.routers.backend-admin.middlewares=backend-admin-addprefix"
        - "traefik.http.routers.backend-admin.entrypoints=https"
        - "traefik.http.routers.backend-admin.tls.certresolver=le"
        - "traefik.http.middlewares.backend-admin-addprefix.addprefix.prefix=/admin"
        
        # - "traefik.http.routers.bot.rule=Host(`bot.${ROOT_DOMAIN}`)"
        # - "traefik.http.routers.bot.middlewares=bot-addprefix"
        # - "traefik.http.routers.bot.entrypoints=https"
        # - "traefik.http.routers.bot.tls.certresolver=le"
        # - "traefik.http.middlewares.bot-addprefix.addprefix.prefix=/bot"

        - "traefik.http.services.backend.loadbalancer.server.port=8000"
      replicas: 1
      # resources:
      #   reservations:
      #     memory: 32M
      #   limits:
      #     memory: 64M
      restart_policy:
        condition: on-failure
        window: 15s
      update_config:
        order: start-first
        monitor: 15s
        failure_action: rollback
      rollback_config:
        order: start-first
        monitor: 15s

secrets:
  verdiary_secret:
    name: verdiary_secret
    external: true
  bot_token:
    name: bot_token
    external: true
  database_url:
    name: database_url
    external: true
   
networks:
  internal:
    external: true
  public:
    external: true
